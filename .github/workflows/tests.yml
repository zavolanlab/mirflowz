name: tests

on:
  pull_request:
    branches:
     - dev
  push:
    branches:
      - '*'

jobs:

  static-code-analysis:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout MIRFLOWZ repository
        uses: actions/checkout@v4

      - name: Setup Miniforge with MIRFLOWZ environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: mirflowz
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.dev.yml
          miniforge-version: latest

      - name: Display Conda and environment info
        run: |
          conda info -a
          conda list

      - name: flake8
        working-directory: ./scripts
        run: flake8

      - name: mypy
        working-directory: ./scripts
        run: mypy ./*.py

      - name: pylint
        working-directory: ./scripts
        run: pylint --rcfile=../pylint.cfg ./*.py

      - name: black
        working-directory: ./scripts
        run: black --check --verbose --line-length=79 ./*.py

  snakemake-format-graph-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

      - name: Checkout MIRFLOWZ repository
        uses: actions/checkout@v4

      - name: Setup Miniforge with MIRFLOWZ environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: mirflowz
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.dev.yml
          miniforge-version: latest

      - name: Display Conda and environment info
        run: |
          conda info -a
          conda list

      - name: Run test script for snakemake format
        run: bash test/test_snakefmt.sh

      - name: Run test script for snakemate lint
        run: bash test/test_snakemake_lint.sh

      - name: Run test script for rule graph
        run: bash test/test_rule_graph.sh


  snakemake-apptainer-integration-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout MIRFLOWZ repository
        uses: actions/checkout@v4

      - name: Setup Miniforge with MIRFLOWZ environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: mirflowz
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.yml
          miniforge-version: latest

      - name: Install Apptainer
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.3.6

      - name: Display Conda and environment info
        run: |
          conda info -a
          conda list

      - name: Run Apptainer local test script
        run: bash test/test_workflow_local_with_apptainer.sh


  snakemake-conda-integration-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

      - name: Checkout MIRFLOWZ repository
        uses: actions/checkout@v4

      - name: Setup Miniforge with MIRFLOWZ environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: mirflowz
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.yml
          miniforge-version: latest

      - name: Display Conda and environment info
        run: |
          conda info -a
          conda list

      - name: Run Conda local test script
        run: bash test/test_workflow_local_with_conda.sh


  unit-testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

      - name: Checkout MIRFLOWZ repository
        uses: actions/checkout@v4

      - name: Setup Miniforge with MIRFLOWZ environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: mirflowz
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.dev.yml
          miniforge-version: latest

      - name: Display Conda and environment info
        run: |
          conda info -a
          conda list

      - name: Run unit tests
        working-directory: ./scripts/tests
        run: pytest --import-mode prepend --cov=scripts --cov-branch --cov-report=term-missing
