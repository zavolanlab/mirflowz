{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Configuration schema",
    "required": ["samples", "genome_file", "gtf_file", "mirna_file", "map_chr_file"],
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "samples":{
            "type": "string",
            "description": "Path to the samples table."
        },
        "bed_file":{
            "type": "string",
            "default": "",
            "description": "Path to the genomic regions file to do the pileups for."
        },
        "genome_file":{
            "type": "string",
            "description": "Path to the reference genome file."
        },
        "gtf_file":{
            "type" : "string",
            "description": "Path to the GTF file."
        },
        "mirna_file":{
            "type": "string",
            "description": "Path to the reference miRNA file."
        },
        "map_chr_file":{
            "type": "string",
            "description": "Path to the chromosome names mapping table."
        },
        "output_dir":{
            "type": "string",
            "default": "results/",
            "description": "Path to the output directory."
        },
        "intermediates_dir":{
            "type": "string",
            "default": "results/intermediates",
            "description": "Path to the directory storing the intermediate files."
        },
        "pileups_dir":{
            "type": "string",
            "default": "results/pileups",
            "description": "Path to the directory storing the ASCII-style pileups."
        },
        "local_log":{
            "type": "string",
            "default": "logs/local/",
            "description": "Path to the local log directory."
        },
        "cluster_log":{
            "type": "string",
            "default": "logs/cluster/",
            "description": "Path to the cluster log directory."
        },
        "scripts_dir":{
            "type": "string",
            "default": "../scripts/",
            "description": "Path to the scripts directory."
        },
        "extension":{
            "type": "integer",
            "default": 6,
            "description": "Number of nucleotides to extend the mature miRNA start and end coordinates."
        },
        "q_value":{
            "type": "integer",
            "default": 10,
            "description": "Q (Phred) score. Minimum quality score to keep."
        },
        "p_value":{
            "type": "integer",
            "default": 50,
            "description": "Minimum % of bases that must have Q quality."
        },
        "error_rate":{
            "type": "number",
            "default": 0.1,
            "description": "Fraction of allowed errors."
        },
        "minimum_length":{
            "type": "integer",
            "default": 15,
            "description": "Discard processed reads shorter than the indicated length."
        },
        "overlap":{
            "type": "integer",
            "default": 3,
            "description": "Minimum overlap length of adapter and read to trim the bases."
        },
        "max_n":{
            "type": "integer",
            "default": 0,
            "description": "Discard reads containing more than the indicated numebr of N bases."
        },
        "max_length_reads":{
            "type": "integer",
            "default": 30,
            "description": "Maximum length of processed reads to map with oligomap."
        },
        "nh":{
            "type": "integer",
            "default": 100,
            "description": "Discard read with more mappings than the indicated number."
        },
        "mir_list":{
            "type": "array",
            "items":{
                "type": "string",
                "enum": ["isomir", "mirna", "pri-mir"]
            },
            "default": ["isomir", "mirna", "pri-mir"],
            "description": " miRNA speices to be quantified."
        },
        "lib_dict":{
            "type": "object",
            "additionalProperties":{
                "type": "array",
            },
            "default": {},
            "description": "Dictionary with a list of library names, as in the samples table, to generate pileups for as value and a condition name as keys."
        }
    }
}
